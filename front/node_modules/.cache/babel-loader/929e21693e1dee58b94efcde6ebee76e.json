{"ast":null,"code":"import _slicedToArray from\"/Users/diamond/Desktop/test_task/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Button,Container,Table}from\"react-bootstrap\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SearchScreen(){var _useState=useState(\"Google\"),_useState2=_slicedToArray(_useState,2),searchSystem=_useState2[0],setSearchSystem=_useState2[1];var _useState3=useState(\"United States\"),_useState4=_slicedToArray(_useState3,2),region=_useState4[0],setRegion=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),keyword=_useState6[0],setKeyword=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),resp=_useState8[0],setResp=_useState8[1];var onSearchSystemChange=function onSearchSystemChange(e){setSearchSystem(e.target.value);};var onRegionChange=function onRegionChange(e){setRegion(e.target.value);};var onKeywordChange=function onKeywordChange(e){setKeyword(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();var data={search_system:searchSystem,region:region,keyword:keyword};axios.post(\"http://127.0.0.1:8000/api/create_task/\",data).then(function(res){return setResp(JSON.parse(res.request.response));}).catch(function(err){return console.log(err);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"search-form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Task\"}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formSearchSystem\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Search System\"}),/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",value:searchSystem,required:true,onChange:onSearchSystemChange,children:[/*#__PURE__*/_jsx(\"option\",{children:\"Google\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Bing\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Yahoo\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Yandex\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Baidu\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Naver\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formRegion\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Select Region\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"select\",value:region,required:true,onChange:onRegionChange,children:/*#__PURE__*/_jsx(\"option\",{children:\"United States\"})})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"formKeyword\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter your keyword\",value:keyword,onChange:onKeywordChange,required:true})}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Submit\"})]}),resp.length<=0?null:/*#__PURE__*/_jsxs(\"div\",{className:\"resp-div\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task created!\"}),/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"SE\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Language\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Location\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Keyword\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tag\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:resp.time}),/*#__PURE__*/_jsx(\"td\",{children:resp.tasks[0].id}),/*#__PURE__*/_jsx(\"td\",{children:resp.tasks[0].data.se}),/*#__PURE__*/_jsx(\"td\",{children:resp.tasks[0].data.language_name}),/*#__PURE__*/_jsx(\"td\",{children:resp.tasks[0].data.location_name}),/*#__PURE__*/_jsx(\"td\",{children:resp.tasks[0].data.keyword}),/*#__PURE__*/_jsx(\"td\",{children:resp.tasks[0].data.tag})]})})]})]})]})]});}export default SearchScreen;","map":{"version":3,"sources":["/Users/diamond/Desktop/test_task/front/src/screens/SearchScreen.js"],"names":["React","useState","Form","Button","Container","Table","axios","SearchScreen","searchSystem","setSearchSystem","region","setRegion","keyword","setKeyword","resp","setResp","onSearchSystemChange","e","target","value","onRegionChange","onKeywordChange","handleSubmit","preventDefault","data","search_system","post","then","res","JSON","parse","request","response","catch","err","console","log","length","time","tasks","id","se","language_name","location_name","tag"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Container, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction SearchScreen() {\n  const [searchSystem, setSearchSystem] = useState(\"Google\");\n  const [region, setRegion] = useState(\"United States\");\n  const [keyword, setKeyword] = useState([]);\n  const [resp, setResp] = useState([]);\n\n  const onSearchSystemChange = (e) => {\n    setSearchSystem(e.target.value);\n  };\n\n  const onRegionChange = (e) => {\n    setRegion(e.target.value);\n  };\n\n  const onKeywordChange = (e) => {\n    setKeyword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      search_system: searchSystem,\n      region: region,\n      keyword: keyword,\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/api/create_task/\", data)\n      .then((res) => setResp(JSON.parse(res.request.response)))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"search-form\">\n      <h1>Create Task</h1>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formSearchSystem\">\n            <Form.Label>Select Search System</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={searchSystem}\n              required\n              onChange={onSearchSystemChange}\n            >\n              <option>Google</option>\n              <option>Bing</option>\n              <option>Yahoo</option>\n              <option>Yandex</option>\n              <option>Baidu</option>\n              <option>Naver</option>\n            </Form.Control>\n            {/* <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n          <Form.Group controlId=\"formRegion\">\n            <Form.Label>Select Region</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={region}\n              required\n              onChange={onRegionChange}\n            >\n              <option>United States</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"formKeyword\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your keyword\"\n              value={keyword}\n              onChange={onKeywordChange}\n              required\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        {resp.length <= 0 ? null : (\n          <div className=\"resp-div\">\n            <h1>Task created!</h1>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>ID</th>\n                  <th>SE</th>\n                  <th>Language</th>\n                  <th>Location</th>\n                  <th>Keyword</th>\n                  <th>Tag</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{resp.time}</td>\n                  <td>{resp.tasks[0].id}</td>\n                  <td>{resp.tasks[0].data.se}</td>\n                  <td>{resp.tasks[0].data.language_name}</td>\n                  <td>{resp.tasks[0].data.location_name}</td>\n                  <td>{resp.tasks[0].data.keyword}</td>\n                  <td>{resp.tasks[0].data.tag}</td>\n                </tr>\n              </tbody>\n            </Table>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default SearchScreen;\n"]},"metadata":{},"sourceType":"module"}