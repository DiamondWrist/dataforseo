[{"/Users/diamond/Desktop/test_task/front/src/index.js":"1","/Users/diamond/Desktop/test_task/front/src/reportWebVitals.js":"2","/Users/diamond/Desktop/test_task/front/src/App.js":"3","/Users/diamond/Desktop/test_task/front/src/screens/SearchScreen.js":"4","/Users/diamond/Desktop/test_task/front/src/components/Header.js":"5","/Users/diamond/Desktop/test_task/front/src/screens/ResultScreen.js":"6","/Users/diamond/Desktop/test_task/front/src/screens/DetailResultScreen.js":"7"},{"size":500,"mtime":1617547908872,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1617547908873,"results":"10","hashOfConfig":"9"},{"size":653,"mtime":1617570434197,"results":"11","hashOfConfig":"9"},{"size":3542,"mtime":1617574413183,"results":"12","hashOfConfig":"9"},{"size":1058,"mtime":1617568336506,"results":"13","hashOfConfig":"9"},{"size":2959,"mtime":1617574405235,"results":"14","hashOfConfig":"9"},{"size":2243,"mtime":1617574384923,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1jxrx7o",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/diamond/Desktop/test_task/front/src/index.js",[],["32","33"],"/Users/diamond/Desktop/test_task/front/src/reportWebVitals.js",[],"/Users/diamond/Desktop/test_task/front/src/App.js",[],"/Users/diamond/Desktop/test_task/front/src/screens/SearchScreen.js",[],"/Users/diamond/Desktop/test_task/front/src/components/Header.js",[],"/Users/diamond/Desktop/test_task/front/src/screens/ResultScreen.js",[],"/Users/diamond/Desktop/test_task/front/src/screens/DetailResultScreen.js",["34"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction DetailResultScreen({ match }) {\n  const [resp, setResp] = useState([]);\n  useEffect(() => {\n    async function fetchProduct() {\n      const { data } = await axios.get(\n        `http://127.0.0.1:8000/api/tasks_ready?id=${match.params.id}&search=${match.params.search}`\n      );\n      setResp(data);\n      //   console.log(data);\n    }\n\n    fetchProduct();\n  }, []);\n\n  return (\n    <div className=\"result-form\">\n      <h1>Task Detail</h1>\n      <Container>\n        {resp.length <= 0 ? (\n          <h1>No data. Please try again later!</h1>\n        ) : (\n          <div className=\"resp-div\">\n            <h1>Detailed Results for {resp.tasks[0].id}</h1>\n            {resp.tasks[0].result != null ? (\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Status Code</th>\n                    <th>Status Message</th>\n                    <th>Keyword</th>\n                    <th>Language Name</th>\n                    <th>Location Name</th>\n                    <th>SE</th>\n                    <th>Datetime</th>\n                    <th>Items Count</th>\n                    <th>Check Url</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{resp.status_code}</td>\n                    <td>{resp.status_message}</td>\n                    <td>{resp.tasks[0].data.keyword}</td>\n                    <td>{resp.tasks[0].data.language_name}</td>\n                    <td>{resp.tasks[0].data.location_name}</td>\n                    <td>{resp.tasks[0].data.se}</td>\n                    <td>{resp.tasks[0].result[0].datetime}</td>\n                    <td>{resp.tasks[0].result[0].items_count}</td>\n                    <td>\n                      <a href={resp.tasks[0].result[0].check_url}>Check URL</a>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            ) : (\n              <h1>Not found! Please create task!</h1>\n            )}\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default DetailResultScreen;\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":17,"column":6,"nodeType":"41","endLine":17,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.id' and 'match.params.search'. Either include them or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [match.params.id, match.params.search]",{"range":"48","text":"49"},[501,503],"[match.params.id, match.params.search]"]