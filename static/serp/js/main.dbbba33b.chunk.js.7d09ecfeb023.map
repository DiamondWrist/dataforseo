{"version":3,"sources":["components/Header.js","screens/SearchScreen.js","screens/ResultScreen.js","screens/DetailResultScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","SearchScreen","useState","searchSystem","setSearchSystem","region","setRegion","keyword","setKeyword","resp","setResp","Form","onSubmit","e","preventDefault","data","search_system","axios","post","then","res","JSON","parse","request","response","catch","err","console","log","Group","controlId","Label","Control","as","value","required","onChange","target","type","placeholder","Button","length","Table","striped","bordered","hover","time","tasks","se","language_name","location_name","tag","ResultScreen","get","result","map","rslt","date_posted","endpoint_regular","DetailResultScreen","match","useEffect","a","params","search","fetchProduct","status_code","status_message","datetime","items_count","href","check_url","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAoCeA,MA/Bf,WACE,OACE,iCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,kBAAgB,EAA7D,SACE,eAACC,EAAA,EAAD,WACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACN,EAAA,EAAOO,MAAR,6BAGF,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAAC,gBAAD,CAAeP,GAAG,IAAlB,SACE,eAACM,EAAA,EAAIE,KAAL,WACE,mBAAGD,UAAU,yBADf,oBAKF,cAAC,gBAAD,CAAeP,GAAG,WAAlB,SACE,eAACM,EAAA,EAAIE,KAAL,WACE,mBAAGD,UAAU,gBADf,kC,iDC6FDE,MAjHf,WAAyB,IAAD,EACkBC,mBAAS,UAD3B,mBACfC,EADe,KACDC,EADC,OAEMF,mBAAS,iBAFf,mBAEfG,EAFe,KAEPC,EAFO,OAGQJ,mBAAS,IAHjB,mBAGfK,EAHe,KAGNC,EAHM,OAIEN,mBAAS,IAJX,mBAIfO,EAJe,KAITC,EAJS,KA+BtB,OACE,sBAAKX,UAAU,cAAf,UACE,6CACA,eAACR,EAAA,EAAD,WACE,eAACoB,EAAA,EAAD,CAAMC,SAjBS,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAO,CACXC,cAAeb,EACfE,OAAQA,EACRE,QAASA,GAEXU,IACGC,KAAK,yCAA0CH,GAC/CI,MAAK,SAACC,GAAD,OAASV,EAAQW,KAAKC,MAAMF,EAAIG,QAAQC,cAC7CC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAO1B,UACE,eAACf,EAAA,EAAKkB,MAAN,CAAYC,UAAU,mBAAtB,UACE,cAACnB,EAAA,EAAKoB,MAAN,mCACA,eAACpB,EAAA,EAAKqB,QAAN,CACEC,GAAG,SACHC,MAAO/B,EACPgC,UAAQ,EACRC,SApCiB,SAACvB,GAC5BT,EAAgBS,EAAEwB,OAAOH,QA+BjB,UAME,4CACA,0CACA,2CACA,4CACA,2CACA,iDAMJ,eAACvB,EAAA,EAAKkB,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACnB,EAAA,EAAKoB,MAAN,4BACA,cAACpB,EAAA,EAAKqB,QAAN,CACEC,GAAG,SACHC,MAAO7B,EACP8B,UAAQ,EACRC,SAnDW,SAACvB,GACtBP,EAAUO,EAAEwB,OAAOH,QA8CX,SAME,wDAGJ,cAACvB,EAAA,EAAKkB,MAAN,CAAYC,UAAU,cAAtB,SACE,cAACnB,EAAA,EAAKqB,QAAN,CACEM,KAAK,OACLC,YAAY,qBACZL,MAAO3B,EACP6B,SAzDY,SAACvB,GACvBL,EAAWK,EAAEwB,OAAOH,QAyDVC,UAAQ,MAGZ,cAACK,EAAA,EAAD,CAAQpD,QAAQ,UAAUkD,KAAK,SAA/B,uBAID7B,EAAKgC,QAAU,EAAI,KAClB,sBAAK1C,UAAU,WAAf,UACE,+CACA,eAAC2C,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,oCACA,oCACA,0CACA,0CACA,yCACA,0CAGJ,gCACE,+BACE,6BAAKpC,EAAKqC,OACV,6BAAKrC,EAAKsC,MAAM,GAAGlD,KACnB,6BAAKY,EAAKsC,MAAM,GAAGhC,KAAKiC,KACxB,6BAAKvC,EAAKsC,MAAM,GAAGhC,KAAKkC,gBACxB,6BAAKxC,EAAKsC,MAAM,GAAGhC,KAAKmC,gBACxB,6BAAKzC,EAAKsC,MAAM,GAAGhC,KAAKR,UACxB,6BAAKE,EAAKsC,MAAM,GAAGhC,KAAKoC,wBCd3BC,MAvFf,WAAyB,IAAD,EACkBlD,mBAAS,UAD3B,mBACfC,EADe,KACDC,EADC,OAEEF,mBAAS,IAFX,mBAEfO,EAFe,KAETC,EAFS,KAkBtB,OACE,sBAAKX,UAAU,cAAf,UACE,8CACA,eAACR,EAAA,EAAD,WACE,eAACoB,EAAA,EAAD,CAAMC,SAdS,SAACC,GACpBA,EAAEC,iBACFG,IACGoC,IADH,8DAE2DlD,IAExDgB,MAAK,SAACC,GAAD,OAASV,EAAQW,KAAKC,MAAMF,EAAIG,QAAQC,cAC7CC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAO1B,UACE,eAACf,EAAA,EAAKkB,MAAN,CAAYC,UAAU,mBAAtB,UACE,cAACnB,EAAA,EAAKoB,MAAN,mCACA,eAACpB,EAAA,EAAKqB,QAAN,CACEC,GAAG,SACHC,MAAO/B,EACPgC,UAAQ,EACRC,SAzBiB,SAACvB,GAC5BT,EAAgBS,EAAEwB,OAAOH,QAoBjB,UAME,4CACA,0CACA,2CACA,4CACA,2CACA,iDAMJ,cAACM,EAAA,EAAD,CAAQpD,QAAQ,UAAUkD,KAAK,SAA/B,uBAID7B,EAAKgC,QAAU,EAAI,KAClB,sBAAK1C,UAAU,WAAf,UACE,8CAAiBI,EAAjB,aACyB,MAAxBM,EAAKsC,MAAM,GAAGO,OACb,eAACZ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oCACA,oCACA,6CACA,qCACA,uDAGJ,gCACGpC,EAAKsC,MAAM,GAAGO,OAAOC,KAAI,SAACC,GAAD,OACxB,+BACE,cAAC,gBAAD,CACEnB,OAAO,SACP7C,GAAE,kBAAagE,EAAK3D,GAAlB,YAAwB2D,EAAKR,IAFjC,SAIE,oBAAIjD,UAAU,UAAd,SAAyByD,EAAK3D,OAEhC,6BAAK2D,EAAKR,KACV,6BAAKQ,EAAKC,cACV,6BAAKD,EAAKL,MACV,6BAAKK,EAAKE,qBAVHF,EAAK3D,YAgBpB,0E,yBCfC8D,MAhEf,YAAwC,IAAVC,EAAS,EAATA,MAAS,EACb1D,mBAAS,IADI,mBAC9BO,EAD8B,KACxBC,EADwB,KAcrC,OAZAmD,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyB7C,IAAMoC,IAAN,mDACuBO,EAAMG,OAAOlE,GADpC,mBACiD+D,EAAMG,OAAOC,SAFvF,gBACUjD,EADV,EACUA,KAGRL,EAAQK,GAJV,4CADc,uBAAC,WAAD,wBASdkD,KACC,IAGD,sBAAKlE,UAAU,cAAf,UACE,6CACA,cAACR,EAAA,EAAD,UACGkB,EAAKgC,QAAU,EACd,kEAEA,sBAAK1C,UAAU,WAAf,UACE,uDAA0BU,EAAKsC,MAAM,GAAGlD,MACf,MAAxBY,EAAKsC,MAAM,GAAGO,OACb,eAACZ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,6CACA,gDACA,yCACA,+CACA,+CACA,oCACA,0CACA,6CACA,gDAGJ,gCACE,+BACE,6BAAKpC,EAAKyD,cACV,6BAAKzD,EAAK0D,iBACV,6BAAK1D,EAAKsC,MAAM,GAAGhC,KAAKR,UACxB,6BAAKE,EAAKsC,MAAM,GAAGhC,KAAKkC,gBACxB,6BAAKxC,EAAKsC,MAAM,GAAGhC,KAAKmC,gBACxB,6BAAKzC,EAAKsC,MAAM,GAAGhC,KAAKiC,KACxB,6BAAKvC,EAAKsC,MAAM,GAAGO,OAAO,GAAGc,WAC7B,6BAAK3D,EAAKsC,MAAM,GAAGO,OAAO,GAAGe,cAC7B,6BACE,mBAAGC,KAAM7D,EAAKsC,MAAM,GAAGO,OAAO,GAAGiB,UAAjC,iCAMR,yECrCCC,MAbf,WACE,OACE,eAAC,gBAAD,WACE,cAAC,EAAD,IACA,eAACjF,EAAA,EAAD,WACE,cAAC,IAAD,CAAOkF,KAAK,IAAIC,UAAWzE,EAAc0E,OAAK,IAC9C,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWtB,IACnC,cAAC,IAAD,CAAOqB,KAAK,sBAAsBC,UAAWf,WCJtCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dbbba33b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction Header() {\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Task Manager</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <LinkContainer to=\"/\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Create Task\n                </Nav.Link>\n              </LinkContainer>\n\n              <LinkContainer to=\"/results\">\n                <Nav.Link>\n                  <i className=\"fas fa-user\"></i> Task Results\n                </Nav.Link>\n              </LinkContainer>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Form, Button, Container, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction SearchScreen() {\n  const [searchSystem, setSearchSystem] = useState(\"Google\");\n  const [region, setRegion] = useState(\"United States\");\n  const [keyword, setKeyword] = useState([]);\n  const [resp, setResp] = useState([]);\n\n  const onSearchSystemChange = (e) => {\n    setSearchSystem(e.target.value);\n  };\n\n  const onRegionChange = (e) => {\n    setRegion(e.target.value);\n  };\n\n  const onKeywordChange = (e) => {\n    setKeyword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      search_system: searchSystem,\n      region: region,\n      keyword: keyword,\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/api/create_task/\", data)\n      .then((res) => setResp(JSON.parse(res.request.response)))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"search-form\">\n      <h1>Create Task</h1>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formSearchSystem\">\n            <Form.Label>Select Search System</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={searchSystem}\n              required\n              onChange={onSearchSystemChange}\n            >\n              <option>Google</option>\n              <option>Bing</option>\n              <option>Yahoo</option>\n              <option>Yandex</option>\n              <option>Baidu</option>\n              <option>Naver</option>\n            </Form.Control>\n            {/* <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n          <Form.Group controlId=\"formRegion\">\n            <Form.Label>Select Region</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={region}\n              required\n              onChange={onRegionChange}\n            >\n              <option>United States</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"formKeyword\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your keyword\"\n              value={keyword}\n              onChange={onKeywordChange}\n              required\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        {resp.length <= 0 ? null : (\n          <div className=\"resp-div\">\n            <h1>Task created!</h1>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>ID</th>\n                  <th>SE</th>\n                  <th>Language</th>\n                  <th>Location</th>\n                  <th>Keyword</th>\n                  <th>Tag</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{resp.time}</td>\n                  <td>{resp.tasks[0].id}</td>\n                  <td>{resp.tasks[0].data.se}</td>\n                  <td>{resp.tasks[0].data.language_name}</td>\n                  <td>{resp.tasks[0].data.location_name}</td>\n                  <td>{resp.tasks[0].data.keyword}</td>\n                  <td>{resp.tasks[0].data.tag}</td>\n                </tr>\n              </tbody>\n            </Table>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default SearchScreen;\n","import React, { useState } from \"react\";\nimport { Form, Button, Container, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nfunction ResultScreen() {\n  const [searchSystem, setSearchSystem] = useState(\"Google\");\n  const [resp, setResp] = useState([]);\n\n  const onSearchSystemChange = (e) => {\n    setSearchSystem(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .get(\n        `http://127.0.0.1:8000/api/tasks_ready?search_system=${searchSystem}`\n      )\n      .then((res) => setResp(JSON.parse(res.request.response)))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"result-form\">\n      <h1>Tasks Result</h1>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"formSearchSystem\">\n            <Form.Label>Select Search System</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={searchSystem}\n              required\n              onChange={onSearchSystemChange}\n            >\n              <option>Google</option>\n              <option>Bing</option>\n              <option>Yahoo</option>\n              <option>Yandex</option>\n              <option>Baidu</option>\n              <option>Naver</option>\n            </Form.Control>\n            {/* <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text> */}\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        {resp.length <= 0 ? null : (\n          <div className=\"resp-div\">\n            <h1>Results for {searchSystem} Search</h1>\n            {resp.tasks[0].result != null ? (\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>SE</th>\n                    <th>Date Posted</th>\n                    <th>Tag</th>\n                    <th>Endpoint Regular</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {resp.tasks[0].result.map((rslt) => (\n                    <tr key={rslt.id}>\n                      <LinkContainer\n                        target=\"_blank\"\n                        to={`/result/${rslt.id}/${rslt.se}`}\n                      >\n                        <td className=\"td-link\">{rslt.id}</td>\n                      </LinkContainer>\n                      <td>{rslt.se}</td>\n                      <td>{rslt.date_posted}</td>\n                      <td>{rslt.tag}</td>\n                      <td>{rslt.endpoint_regular}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            ) : (\n              <h1>Not found! Please create task!</h1>\n            )}\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default ResultScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction DetailResultScreen({ match }) {\n  const [resp, setResp] = useState([]);\n  useEffect(() => {\n    async function fetchProduct() {\n      const { data } = await axios.get(\n        `http://127.0.0.1:8000/api/tasks_ready?id=${match.params.id}&search=${match.params.search}`\n      );\n      setResp(data);\n      //   console.log(data);\n    }\n\n    fetchProduct();\n  }, []);\n\n  return (\n    <div className=\"result-form\">\n      <h1>Task Detail</h1>\n      <Container>\n        {resp.length <= 0 ? (\n          <h1>No data. Please try again later!</h1>\n        ) : (\n          <div className=\"resp-div\">\n            <h1>Detailed Results for {resp.tasks[0].id}</h1>\n            {resp.tasks[0].result != null ? (\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Status Code</th>\n                    <th>Status Message</th>\n                    <th>Keyword</th>\n                    <th>Language Name</th>\n                    <th>Location Name</th>\n                    <th>SE</th>\n                    <th>Datetime</th>\n                    <th>Items Count</th>\n                    <th>Check Url</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{resp.status_code}</td>\n                    <td>{resp.status_message}</td>\n                    <td>{resp.tasks[0].data.keyword}</td>\n                    <td>{resp.tasks[0].data.language_name}</td>\n                    <td>{resp.tasks[0].data.location_name}</td>\n                    <td>{resp.tasks[0].data.se}</td>\n                    <td>{resp.tasks[0].result[0].datetime}</td>\n                    <td>{resp.tasks[0].result[0].items_count}</td>\n                    <td>\n                      <a href={resp.tasks[0].result[0].check_url}>Check URL</a>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            ) : (\n              <h1>Not found! Please create task!</h1>\n            )}\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default DetailResultScreen;\n","import { Container } from \"react-bootstrap\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\n\nimport SearchScreen from \"./screens/SearchScreen\";\nimport ResultScreen from \"./screens/ResultScreen\";\nimport DetailResultScreen from \"./screens/DetailResultScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <Route path=\"/\" component={SearchScreen} exact />\n        <Route path=\"/results/\" component={ResultScreen} />\n        <Route path=\"/result/:id/:search\" component={DetailResultScreen} />\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}